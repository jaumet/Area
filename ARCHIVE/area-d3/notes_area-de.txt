AREA v4
-------

- Version 4 of AREA made with:
	- Interface: 
		- html5 using new tags, like <section>,...
		- Area representation/display: D3

	- Data acces + logics
		- Option A: backbone.js OR Agility.js
		- Option B: server side python (maybe something simpler than Django, like webpy or similar (ask Chris)
	>>- Option C: from a json (or csv) file of the whole data and everything done with D3/jquery.
	
------------------
Option C dev process: 
Parts:
A- Area configuration default variables: firstly in a config file. Later on maybe better to have a JS config editor.
	- Area size: (AxB) in px
	- Data title
	- Data description
	- Min distinct % to grade a paramenter for choosing.
	
B- Data analysis: 
	1) Data reading
		-> data.json: 
				- number of rows
				- parameters names list
				- (optional) check for empty values and add a "empty" or "0" 
				- Check distinc values per each parameter -> calculate (distinct(i)/total_rows)*100
				
	2) Data massaging/transforming
		-> create json sub-datasets for each block OR generate new json variable grouped by blocks.

	3) Send data in pieces (a var per area block) (Or not) to the d3 area builder

	

C- HTML page:
	- head
	- area:
		- Initial and accessible view: a good data overview.
	- sidebar: filter, data title, data description,

D- D3 area representation
	1) D3 area builder:
		- Area position, and blocks positions
		- Calling blocks builder
		- Calling nodesXblock builder: add interaction (click a node)

	2) Area features:
		- Change area config: area size, colors

------------------
Option A: Dev process:

0) Data: check an easy fortat, easily transformable from: google tables, spreadsheet, etc...
1) Backbone: estudy data access (data must be in a DDBB or just text (xml, json, customized?)
	- Comparison javascript frameworks: http://codebrief.com/2012/01/the-top-10-javascript-mvc-frameworks-reviewed/
	- ToDoMVC javascript: http://addyosmani.github.com/todomvc/
	

2) ...

------------------
